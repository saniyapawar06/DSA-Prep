class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int m = text1.length();
        int j = text2.length();
        
        // Create a 2D DP array
        int[][] dp = new int[m + 1][j + 1];

        // Fill the DP table
        for (int i = 1; i <= m; i++) {
            for (int k = 1; k <= j; k++) {
                if (text1.charAt(i - 1) == text2.charAt(k - 1)) {
                    dp[i][k] = dp[i - 1][k - 1] + 1;
                } else {
                    dp[i][k] = Math.max(dp[i - 1][k], dp[i][k - 1]);
                }
            }
        }

        // The last cell contains the length of the LCS
        return dp[m][j];
    }
}

